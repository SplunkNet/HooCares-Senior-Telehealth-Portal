<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>false</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_snc_hoocares_sensor_types</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_snc_hoocares_sensor_types">frequencyVALCHANGES^EQ<item endquery="false" field="frequency" goto="false" newquery="false" operator="VALCHANGES" or="false" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Update scheduled job</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	var scheduledJobGR = new GlideRecord('sysauto_script');
	if (current.scheduled_job != '')
	{
		scheduledJobGR.get(current.scheduled_job);
		scheduledJobGR.run_period = current.frequency();
	}
	else
	{
		scheduledJobGR.initialize();
		
		scheduledJobGR.name = 'Scheduled job for sensor ' + current.sensor_id;
		scheduledJobGR.run_type = 'periodically';
		scheduledJobGR.run_period = current.frequency();
		scheduledJobGR.script = "HooCaresUtils.createMeasurement(" + current.sys_id + ");";
		scheduledJobGR.sys_scope = '888eab4ddb24501005e46b984b9619f3';
		var id = scheduledJobGR.insert();
		
		current.scheduled_job = id;
		current.update();
	}

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>rjsavage</sys_created_by>
        <sys_created_on>2020-05-02 20:52:07</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>9a6d8861dbec501076a050d3e296198a</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>Update scheduled job</sys_name>
        <sys_overrides/>
        <sys_package display_value="hoocares" source="x_snc_hoocares">888eab4ddb24501005e46b984b9619f3</sys_package>
        <sys_policy/>
        <sys_scope display_value="hoocares">888eab4ddb24501005e46b984b9619f3</sys_scope>
        <sys_update_name>sys_script_9a6d8861dbec501076a050d3e296198a</sys_update_name>
        <sys_updated_by>rjsavage</sys_updated_by>
        <sys_updated_on>2020-05-03 14:02:25</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=9a6d8861dbec501076a050d3e296198a"/>
</record_update>
